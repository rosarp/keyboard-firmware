#!/usr/bin/env nu

def main [] {}

# with debug symbols
def "main debug" [] {
	zig build
}

# with debug symbols
def "main debug-ref" [] {
	zig build -freference-trace
}

# clean cache
def "main clean" [] {
	if ('.zig-cache' | path exists) {
		rm -r .zig-cache/
	}
	if ('zig-cache' | path exists) {
		rm -r zig-cache/
	}
	if ('zig-out' | path exists) {
		rm -r zig-out/
	}
}

# default 
def "main build" [] {
	main build-safe
}

# with all safety ON
def "main build-safe" [] {
	zig build -Doptimize=ReleaseSafe
}

# with safety off + size optimized
def "main build-small" [] {
	zig build -Doptimize=ReleaseSmall
}

# with safety off + performance optimized
def "main build-fast" [] {
	zig build -Doptimize=ReleaseFast
}

def "main zig-fetch" [] {
	# 0.13.0
	# zig fetch --save="microzig" https://github.com/ZigEmbeddedGroup/microzig/archive/26767e8227ae80fc1a39245815f396d8270c84ca.tar.gz
	# zig fetch --save="microzig/build" https://github.com/ZigEmbeddedGroup/microzig/archive/26767e8227ae80fc1a39245815f396d8270c84ca.tar.gz
	# zig fetch --save="microzig/bsp/raspberrypi/rp2040" https://github.com/ZigEmbeddedGroup/microzig/archive/26767e8227ae80fc1a39245815f396d8270c84ca.tar.gz
	# 0.12.1
	# zig fetch --save="microzig/build" https://downloads.microzig.tech/microzig-0.12.1/build-0.0.1.tar.gz
	# zig fetch --save="microzig/bsp/raspberrypi/rp2040" https://downloads.microzig.tech/microzig-0.12.1/bsp/raspberrypi/rp2040-0.0.0.tar.gz
}
